{"ast":null,"code":"var _jsxFileName = \"/Users/vivekrawat/Desktop/imageextractor/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport Tesseract from \"tesseract.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [imagePath, setImagePath] = useState(null);\n  const [extractedText, setExtractedText] = useState(null);\n  const tesseract = Tesseract;\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      // You can use FileReader to read the contents of the file and obtain a data URL\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const uploadedImagePath = reader.result;\n        setImagePath(uploadedImagePath);\n      };\n      reader.readAsDataURL(file);\n    }\n    ;\n  };\n  const extractTextFromImage = imagePath => {\n    Tesseract.recognize(imagePath, 'eng',\n    // Language: English\n    {\n      logger: info => console.log(info)\n    }).then(({\n      data: {\n        text\n      }\n    }) => {\n      setExtractedText(text);\n    }).catch(error => {\n      console.error('Error extracting text:', error);\n    });\n\n    //console.log(imagePath);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hi Tarique\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          placeholder: \"upload image\",\n          onChange: handleImageUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: extractTextFromImage,\n          type: \"submit\",\n          children: \"Extract\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        class: \"flex\",\n        children: [imagePath && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Uploaded Image:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imagePath,\n            alt: \"Uploaded\",\n            style: {\n              maxWidth: \"100%\",\n              maxHeight: \"300px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: extractedText && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Extracted Text:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: extractedText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  };\n}\n_s(App, \"uMnnM0ldv4g+tYavSDrGJstRuAk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Tesseract","React","useState","jsxDEV","_jsxDEV","App","_s","imagePath","setImagePath","extractedText","setExtractedText","tesseract","handleImageUpload","event","file","target","files","reader","FileReader","onloadend","uploadedImagePath","result","readAsDataURL","extractTextFromImage","recognize","logger","info","console","log","then","data","text","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","placeholder","onChange","onClick","class","src","alt","style","maxWidth","maxHeight","_c","$RefreshReg$"],"sources":["/Users/vivekrawat/Desktop/imageextractor/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport Tesseract from \"tesseract.js\";\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [imagePath, setImagePath] = useState(null);\n  const [extractedText, setExtractedText] = useState(null);\n  const tesseract = Tesseract;\n\n  const handleImageUpload = (event) => {\n    const file = event.target.files[0];\n\n    if (file) {\n      // You can use FileReader to read the contents of the file and obtain a data URL\n      const reader = new FileReader();\n\n      reader.onloadend = () => {\n        const uploadedImagePath = reader.result;\n        setImagePath(uploadedImagePath);\n      };\n\n      reader.readAsDataURL(file);\n      \n      \n    };\n    \n  };\n  const extractTextFromImage = (imagePath) => {\n    Tesseract.recognize(\n      imagePath,\n      'eng', // Language: English\n      {\n        logger: info => console.log(info),\n      }\n    ).then(({ data: { text } }) => {\n      setExtractedText(text);\n    }).catch(error => {\n      console.error('Error extracting text:', error);\n    });\n\n    //console.log(imagePath);\n\n    return (\n      <div className=\"App\">\n        <h1>Hi Tarique</h1>\n        <form>\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            placeholder=\"upload image\"\n            onChange={handleImageUpload}\n          />\n          {/* <button type=\"submit\">Upload</button> */}\n          <button onClick={extractTextFromImage} type=\"submit\">\n            Extract\n          </button>\n        </form>\n        {/* <img src={logo} */}\n        <section class=\"flex\">\n          {imagePath && (\n            <div>\n              <p>Uploaded Image:</p>\n              <img\n                src={imagePath}\n                alt=\"Uploaded\"\n                style={{ maxWidth: \"100%\", maxHeight: \"300px\" }}\n              />\n            </div>\n          )}\n          <div>\n            {extractedText && (\n              <div>\n                <p>Extracted Text:</p>\n                <pre>{extractedText}</pre>\n              </div>\n            )}\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\n  export default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}