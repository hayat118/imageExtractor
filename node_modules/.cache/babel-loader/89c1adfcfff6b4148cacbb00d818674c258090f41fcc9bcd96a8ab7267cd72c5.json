{"ast":null,"code":"var _jsxFileName = \"/Users/vivekrawat/Desktop/imageextractor/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport Tesseract from \"tesseract.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [imagePath, setImagePath] = useState(null);\n  const tesseract = Tesseract;\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      // You can use FileReader to read the contents of the file and obtain a data URL\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const uploadedImagePath = reader.result;\n        setImagePath(uploadedImagePath);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  console.log(imagePath);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi Tarique\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        placeholder: \"upload image\",\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: \"\",\n        type: \"submit\",\n        children: \"Extract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"flex\",\n      children: [imagePath && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Uploaded Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imagePath,\n          alt: \"Uploaded\",\n          style: {\n            maxWidth: \"100%\",\n            maxHeight: \"300px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xncWjlzkv+2VH+mF0mQzwZ0XvUs=\");\n_c = App;\nexport default App;\n\n// const Tesseract = require(\"tesseract.js\");\n// const fs = require(\"fs\");\n\n// const imagePath = \"image/20231113135539935138000000-6.jpg\";\n\n// // Read the image file\n// fs.readFile(imagePath, (err, data) => {\n//   if (err) {\n//     console.error(\"Error reading image file:\", err);\n//     return;\n//   }\n\n//   // Perform OCR on the image\n//   Tesseract.recognize(\n//     data,\n//     \"eng\", // Language code (English in this case)\n//     {\n//       logger: (info) => console.log(info),\n//     }\n//   )\n//     .then(({ data: { text } }) => {\n//       // Output the recognized text\n//       console.log(\"Recognized Text:\", text);\n//     })\n//     .catch((error) => {\n//       console.error(\"Error performing OCR:\", error);\n//     });\n// });\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Tesseract","React","useState","jsxDEV","_jsxDEV","App","_s","imagePath","setImagePath","tesseract","handleImageUpload","event","file","target","files","reader","FileReader","onloadend","uploadedImagePath","result","readAsDataURL","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","placeholder","onChange","onClick","class","src","alt","style","maxWidth","maxHeight","_c","$RefreshReg$"],"sources":["/Users/vivekrawat/Desktop/imageextractor/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport Tesseract from \"tesseract.js\";\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [imagePath, setImagePath] = useState(null);\n  const tesseract = Tesseract;\n\n  const handleImageUpload = (event) => {\n    const file = event.target.files[0];\n\n    if (file) {\n      // You can use FileReader to read the contents of the file and obtain a data URL\n      const reader = new FileReader();\n\n      reader.onloadend = () => {\n        const uploadedImagePath = reader.result;\n        setImagePath(uploadedImagePath);\n      };\n\n      reader.readAsDataURL(file);\n    }\n  };\n\n  console.log(imagePath);\n\n  return (\n    <div className=\"App\">\n      <h1>Hi Tarique</h1>\n      <form>\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          placeholder=\"upload image\"\n          onChange={handleImageUpload}\n        />\n        {/* <button type=\"submit\">Upload</button> */}\n        <button onClick={\"\"} type=\"submit\">\n          Extract\n        </button>\n      </form>\n      {/* <img src={logo} */}\n      <section class=\"flex\">\n        {imagePath && (\n          <div>\n            <p>Uploaded Image:</p>\n            <img\n              src={imagePath}\n              alt=\"Uploaded\"\n              style={{ maxWidth: \"100%\", maxHeight: \"300px\" }}\n            />\n          </div>\n        )}\n        <div>\n          <textarea></textarea>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n\n// const Tesseract = require(\"tesseract.js\");\n// const fs = require(\"fs\");\n\n// const imagePath = \"image/20231113135539935138000000-6.jpg\";\n\n// // Read the image file\n// fs.readFile(imagePath, (err, data) => {\n//   if (err) {\n//     console.error(\"Error reading image file:\", err);\n//     return;\n//   }\n\n//   // Perform OCR on the image\n//   Tesseract.recognize(\n//     data,\n//     \"eng\", // Language code (English in this case)\n//     {\n//       logger: (info) => console.log(info),\n//     }\n//   )\n//     .then(({ data: { text } }) => {\n//       // Output the recognized text\n//       console.log(\"Recognized Text:\", text);\n//     })\n//     .catch((error) => {\n//       console.error(\"Error performing OCR:\", error);\n//     });\n// });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}